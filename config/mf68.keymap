/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap0: combos {
        compatible = "zmk,combos";

        unlock {
            bindings = <&studio_unlock>;
            key-positions = <0 16>;
        };

        adjust_layer {
            bindings = <&tog 2>;
            key-positions = <14 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BSPC   |    |  A  |  B  |
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |    \    |    |  C  |  D  |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |    |  UP |     |
            // |  CTL  |  WIN  |  ALT  |            SPACE               | ALT | MO(1) |  WIN  | CTRL    | LFT| DOWN|RIGT |
            // ------------------------------------------------------------------------------------------

            bindings = <
&kp ESC    &kp N1    &kp N2    &kp N3     &kp N4    &kp N5  &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp MINUS  &kp EQUAL  &kp BSPC  &kp C_VOL_DN      &kp C_VOL_UP
&kp TAB    &kp Q     &kp W     &kp E      &kp R     &kp T   &kp Y      &kp U     &kp I      &kp O      &kp P     &kp LBKT   &kp RBKT   &kp BSLH  &kp C_PLAY_PAUSE  &kp C_NEXT
&kp CLCK   &kp A     &kp S     &kp D      &kp F     &kp G   &kp H      &kp J     &kp K      &kp L      &kp SEMI  &kp SQT    &kp RET
&kp LSHFT  &kp Z     &kp X     &kp C      &kp V     &kp B   &kp N      &kp M     &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT  &kp UP
&kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE  &kp RALT  &mo 1   &kp RCTRL  &kp LEFT  &kp DOWN   &kp RIGHT
            >;
        };

        fn_layer {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
            >;
        };

        config_layer {
            bindings = <
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none  &none  &bt BT_CLR  &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none         &none  &none  &none  &none  &none       &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none         &none  &none  &none  &none  &none       &none  &none
&none         &none         &none         &none         &none         &none         &none  &none  &none  &none  &none       &none  &none
&none         &none         &none         &none         &none         &none         &none  &none  &none  &none
            >;
        };
    };
};
